[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
merged = '0'
hook_add = '''
let g:coc_global_extensions = [
      \'coc-diagnostic', 
      \'coc-explorer', 
      \'coc-lists', 
      \'coc-html', 
      \'coc-tsserver', 
      \'coc-json', 
      \'coc-markdownlint', 
      \'coc-solargraph',
      \'coc-rust-analyzer', 
      \'coc-sql', 
      \'coc-yaml'
\]
:nmap <space>e <Cmd>CocCommand explorer<CR>

function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~ '\s'
endfunction

" autocomplete
inoremap <silent><expr> <C-j> coc#pum#visible() ? coc#pum#next(1) : "\<C-j>"
inoremap <silent><expr> <C-k> coc#pum#visible() ? coc#pum#prev(1) : "\<C-k>"
inoremap <silent><expr> <Enter> coc#pum#visible() ? coc#pum#confirm() : "\<Enter>"
inoremap <silent><expr> <Esc> coc#pum#visible() ? coc#pum#cancel() : "\<Esc>"
inoremap <silent><expr> <C-h> coc#pum#visible() ? coc#pum#cancel() : "\<C-h>"

" <Tab>で次、<S+Tab>で前
inoremap <silent><expr> <TAB>
  \ coc#pum#visible() ? coc#pum#next(1):
  \ <SID>check_back_space() ? "\<Tab>" :
  \ coc#refresh()
inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\<S-TAB>" " "\<C-h>"
inoremap <silent><expr> <c-space> coc#refresh()
'''

[[plugins]] # 非同期処理
repo = 'Shougo/vimproc.vim'

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]] # カラーテーマ
repo = 'jacoborus/tender.vim'

# statusline
[[plugins]]
repo = 'itchyny/lightline.vim'

# ブランチ名をlightlineに表示する
[[plugins]]
repo = 'itchyny/vim-gitbranch'


# JSONの色付け用。
# 本当はlazy loadしたいが、後述のindentLineより前に呼ばないとJSONファイルのダブルクォートが表示されないため、やむなく。
 [[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'
hook_add = '''
set conceallevel=0
let g:vim_json_syntax_conceal = 0
'''

# インデントを可視化
[[plugins]]
repo = 'Yggdroot/indentLine'

# 無駄な空白をハイライト
[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

# ripgrepコマンド
[[plugins]]
repo = 'kyoh86/vim-ripgrep'

# C-j, C-kで高速縦移動
[[plugins]]
repo = 'haya14busa/vim-edgemotion'
hook_add = '''
nmap <C-j> <Plug>(edgemotion-j)
nmap <C-k> <Plug>(edgemotion-k)
'''

# 検索結果件数をバーチャル表示
[[plugins]]
repo = 'kevinhwang91/nvim-hlslens'
hook_add = '''
lua << EOF
  local kopts = {noremap = true, silent = true}
  vim.api.nvim_set_keymap('n', 'n',
    [[<Cmd>execute('normal! ' . v:count1 . 'n')<CR><Cmd>lua require('hlslens').start()<CR>]],
    kopts)
  vim.api.nvim_set_keymap('n', 'N',
    [[<Cmd>execute('normal! ' . v:count1 . 'N')<CR><Cmd>lua require('hlslens').start()<CR>]],
    kopts)
  vim.api.nvim_set_keymap('n', '*', [[*<Cmd>lua require('hlslens').start()<CR>]], kopts)
  vim.api.nvim_set_keymap('n', '#', [[#<Cmd>lua require('hlslens').start()<CR>]], kopts)
  vim.api.nvim_set_keymap('n', 'g*', [[g*<Cmd>lua require('hlslens').start()<CR>]], kopts)
  vim.api.nvim_set_keymap('n', 'g#', [[g#<Cmd>lua require('hlslens').start()<CR>]], kopts)
  vim.api.nvim_set_keymap('n', '<Leader>l', ':noh<CR>', kopts)
EOF
'''

# スクロールバーを追加
[[plugins]]
repo = 'petertriho/nvim-scrollbar'
hook_add = '''
lua << EOF
  require("scrollbar").setup()
  require("scrollbar.handlers.search").setup()
EOF
'''

# fコマンドでのjumpをわかりやすく
[[plugins]]
repo = 'unblevable/quick-scope'
hook_add = '''
let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']
'''

# カーソルjump
[[plugins]]
repo = 'phaazon/hop.nvim'
hook_add = '''
lua << EOF
  require'hop'.setup()
EOF
nmap <Leader><Leader> [hop]
xmap <Leader><Leader> [hop]
nnoremap <silent> [hop]w :HopWord<CR>
nnoremap <silent> [hop]l :HopLine<CR>
nnoremap <silent> [hop]f :HopChar1<CR>
'''

